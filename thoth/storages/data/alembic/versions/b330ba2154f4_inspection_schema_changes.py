"""Inspection schema changes.

Revision ID: b330ba2154f4
Revises: 0c8eab5d4197
Create Date: 2020-02-14 11:49:15.260266+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b330ba2154f4'
down_revision = '0c8eab5d4197'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inspection_batch',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('batch_name', sa.String(length=256), nullable=True),
    sa.Column('batch_size', sa.Integer(), nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=True),
    sa.Column('dependency_monkey_run_id', sa.Integer(), nullable=True),
    sa.Column('inspection_document_id', sa.String(length=256), nullable=False),
    sa.Column('inspection_sync_state', postgresql.ENUM('PENDING', 'SYNCED', name='inspection_sync_state'), nullable=False),
    sa.Column('amun_version', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['dependency_monkey_run_id'], ['dependency_monkey_run.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('inspection_document_id')
    )
    op.create_table('inspection_build',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('inspection_document_id', sa.String(length=256), nullable=True),
    sa.Column('requests_cpu', sa.Float(), nullable=True),
    sa.Column('requests_memory', sa.Float(), nullable=True),
    sa.Column('hardware_information_id', sa.Integer(), nullable=True),
    sa.Column('software_environment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hardware_information_id'], ['hardware_information.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['inspection_document_id'], ['inspection_batch.inspection_document_id'], ),
    sa.ForeignKeyConstraint(['software_environment_id'], ['software_environment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('inspection_run', sa.Column('hardware_information_id', sa.Integer(), nullable=True))
    op.add_column('inspection_run', sa.Column('requests_cpu', sa.Float(), nullable=True))
    op.add_column('inspection_run', sa.Column('requests_memory', sa.Float(), nullable=True))
    op.add_column('inspection_run', sa.Column('software_environment_id', sa.Integer(), nullable=True))
    op.alter_column('inspection_run', 'inspection_document_id',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.drop_constraint('inspection_run_inspection_document_id_key', 'inspection_run', type_='unique')
    op.drop_constraint('inspection_run_build_software_environment_id_fkey', 'inspection_run', type_='foreignkey')
    op.drop_constraint('inspection_run_run_hardware_information_id_fkey', 'inspection_run', type_='foreignkey')
    op.drop_constraint('inspection_run_build_hardware_information_id_fkey', 'inspection_run', type_='foreignkey')
    op.drop_constraint('inspection_run_dependency_monkey_run_id_fkey', 'inspection_run', type_='foreignkey')
    op.drop_constraint('inspection_run_run_software_environment_id_fkey', 'inspection_run', type_='foreignkey')
    op.create_foreign_key(None, 'inspection_run', 'inspection_batch', ['inspection_document_id'], ['inspection_document_id'])
    op.create_foreign_key(None, 'inspection_run', 'hardware_information', ['hardware_information_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'inspection_run', 'software_environment', ['software_environment_id'], ['id'], ondelete='CASCADE')
    op.drop_column('inspection_run', 'amun_version')
    op.drop_column('inspection_run', 'run_requests_memory')
    op.drop_column('inspection_run', 'build_requests_cpu')
    op.drop_column('inspection_run', 'inspection_sync_state')
    op.drop_column('inspection_run', 'run_requests_cpu')
    op.drop_column('inspection_run', 'run_hardware_information_id')
    op.drop_column('inspection_run', 'dependency_monkey_run_id')
    op.drop_column('inspection_run', 'run_software_environment_id')
    op.drop_column('inspection_run', 'build_hardware_information_id')
    op.drop_column('inspection_run', 'build_software_environment_id')
    op.drop_column('inspection_run', 'datetime')
    op.drop_column('inspection_run', 'build_requests_memory')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('inspection_run', sa.Column('build_requests_memory', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('inspection_run', sa.Column('datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('inspection_run', sa.Column('build_software_environment_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('inspection_run', sa.Column('build_hardware_information_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('inspection_run', sa.Column('run_software_environment_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('inspection_run', sa.Column('dependency_monkey_run_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('inspection_run', sa.Column('run_hardware_information_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('inspection_run', sa.Column('run_requests_cpu', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('inspection_run', sa.Column('inspection_sync_state', postgresql.ENUM('PENDING', 'SYNCED', name='inspection_sync_state'), autoincrement=False, nullable=False))
    op.add_column('inspection_run', sa.Column('build_requests_cpu', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('inspection_run', sa.Column('run_requests_memory', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('inspection_run', sa.Column('amun_version', sa.VARCHAR(length=256), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'inspection_run', type_='foreignkey')
    op.drop_constraint(None, 'inspection_run', type_='foreignkey')
    op.drop_constraint(None, 'inspection_run', type_='foreignkey')
    op.create_foreign_key('inspection_run_run_software_environment_id_fkey', 'inspection_run', 'software_environment', ['run_software_environment_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('inspection_run_dependency_monkey_run_id_fkey', 'inspection_run', 'dependency_monkey_run', ['dependency_monkey_run_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('inspection_run_build_hardware_information_id_fkey', 'inspection_run', 'hardware_information', ['build_hardware_information_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('inspection_run_run_hardware_information_id_fkey', 'inspection_run', 'hardware_information', ['run_hardware_information_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('inspection_run_build_software_environment_id_fkey', 'inspection_run', 'software_environment', ['build_software_environment_id'], ['id'], ondelete='CASCADE')
    op.create_unique_constraint('inspection_run_inspection_document_id_key', 'inspection_run', ['inspection_document_id'])
    op.alter_column('inspection_run', 'inspection_document_id',
               existing_type=sa.VARCHAR(length=256),
               nullable=False)
    op.drop_column('inspection_run', 'software_environment_id')
    op.drop_column('inspection_run', 'requests_memory')
    op.drop_column('inspection_run', 'requests_cpu')
    op.drop_column('inspection_run', 'hardware_information_id')
    op.drop_table('inspection_build')
    op.drop_table('inspection_batch')
    # ### end Alembic commands ###
